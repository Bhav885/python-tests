{"uid":"71e7d62cddc2e2f","name":"test_login_with_csv[firefox-mngr640698-anotherPass]","fullName":"Guru99BankAutomation.tests.test_login_ddt#test_login_with_csv","historyId":"adf937265a3f4f2d3d416753ef736ac4","time":{"start":1761043523291,"stop":1761043528784,"duration":5493},"status":"failed","statusMessage":"AssertionError: Login failed for valid user: mngr640698\nassert False\n +  where False = is_login_successful()\n +    where is_login_successful = <pages.guru_login_page.GuruLoginPage object at 0x000001B4A3BE2470>.is_login_successful","statusTrace":"setup = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"1145f8bf-f0d6-4eac-83de-c91adb0819fa\")>, username = 'mngr640698'\npassword = 'anotherPass'\n\n    @pytest.mark.parametrize(\"username,password\", data.values.tolist())\n    def test_login_with_csv(setup, username, password):\n        login = GuruLoginPage(setup)\n        login.open()\n        login.login(username, password)\n    \n        if username.startswith(\"mngr\"):  # valid users (like your real manager ID)\n>           assert login.is_login_successful(), f\"Login failed for valid user: {username}\"\nE           AssertionError: Login failed for valid user: mngr640698\nE           assert False\nE            +  where False = is_login_successful()\nE            +    where is_login_successful = <pages.guru_login_page.GuruLoginPage object at 0x000001B4A3BE2470>.is_login_successful\n\nGuru99BankAutomation\\tests\\test_login_ddt.py:41: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1761043511689,"stop":1761043523290,"duration":11601},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: Login failed for valid user: mngr640698\nassert False\n +  where False = is_login_successful()\n +    where is_login_successful = <pages.guru_login_page.GuruLoginPage object at 0x000001B4A3BE2470>.is_login_successful","statusTrace":"setup = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"1145f8bf-f0d6-4eac-83de-c91adb0819fa\")>, username = 'mngr640698'\npassword = 'anotherPass'\n\n    @pytest.mark.parametrize(\"username,password\", data.values.tolist())\n    def test_login_with_csv(setup, username, password):\n        login = GuruLoginPage(setup)\n        login.open()\n        login.login(username, password)\n    \n        if username.startswith(\"mngr\"):  # valid users (like your real manager ID)\n>           assert login.is_login_successful(), f\"Login failed for valid user: {username}\"\nE           AssertionError: Login failed for valid user: mngr640698\nE           assert False\nE            +  where False = is_login_successful()\nE            +    where is_login_successful = <pages.guru_login_page.GuruLoginPage object at 0x000001B4A3BE2470>.is_login_successful\n\nGuru99BankAutomation\\tests\\test_login_ddt.py:41: AssertionError","steps":[],"attachments":[{"uid":"b9a05c1152e2b64d","name":"stdout","source":"b9a05c1152e2b64d.txt","type":"text/plain","size":30}],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1,"attachmentStep":false,"stepsCount":0},"afterStages":[{"name":"setup::0","time":{"start":1761043528824,"stop":1761043533482,"duration":4658},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"parentSuite","value":"Guru99BankAutomation.tests"},{"name":"suite","value":"test_login_ddt"},{"name":"host","value":"ASCENDI-VTTOOV9"},{"name":"thread","value":"10196-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Guru99BankAutomation.tests.test_login_ddt"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"password","value":"'anotherPass'"},{"name":"setup","value":"'firefox'"},{"name":"username","value":"'mngr640698'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"71e7d62cddc2e2f.json","parameterValues":["'anotherPass'","'firefox'","'mngr640698'"]}